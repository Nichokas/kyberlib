name: ðŸ“¶ Coverage

on:
  push:
    branches:
      - main
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    env:
      CARGO_INCREMENTAL: "0"
      RUSTFLAGS: "-C instrument-coverage -C codegen-units=1 -C inline-threshold=0 -C link-dead-code -C overflow-checks=off -C panic=abort -Zpanic_abort_tests"
      RUSTDOCFLAGS: "-C instrument-coverage -C codegen-units=1 -C inline-threshold=0 -C link-dead-code -C overflow-checks=off -C panic=abort -Zpanic_abort_tests"
      LLVM_PROFILE_FILE: "coverage-%p-%m.profraw"

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Setup Rust nightly    
      - name: Install Rust
        uses: hecrj/setup-rust-action@v1
        with:
          rust-version: nightly

      # Configure cache for Cargo
      - name: Cache Cargo registry, index
        uses: actions/cache@v4
        id: cache-cargo
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/bin
            ~/.cargo/git
          key: linux-${{ steps.toolchain.outputs.rustc_hash }}-rust-cov-${{ hashFiles('**/Cargo.lock') }}

      # Run tests with all features
      - name: Test (cargo test)
        run: cargo test --workspace

      # Install grcov
      - name: Install grcov
        run: cargo install grcov --force

      - name: Generate lcov report
        run: |
          grcov . \
          --ignore-not-existing \
          -o lcov.info


      # Upload to Codecov.io
      - name: Upload to Codecov.io
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: lcov.info
